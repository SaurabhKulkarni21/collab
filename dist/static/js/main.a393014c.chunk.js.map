{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/layout/Footer.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbaseconfig.js","index.js"],"names":["styles","fontSize","connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","initials","profile","react_default","a","createElement","className","NavLink","to","onClick","style","SignedOutLinks","state","firebase","console","log","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","gitlink","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Link_default","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","Object","defineProperty","target","value","authError","height","marginTop","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","stylesHr","opacity","marginLeft","marginRight","Footer","react_social_icons","width","url","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","layout_Footer","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbaseconfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a393014c.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst styles = {\n    fontSize: '18px'\n}\nconst SignedInLinks = (props) => {\n    const initials = props.profile.initials;\n\n    return (\n        <ul className=\"right\">\n            <li><NavLink to ='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to ='/' className='btn btn-floating grey darken-2' style = {styles}>{ initials }</NavLink></li>\n        </ul>\n    )\n\n}\n\n\nconst  mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const  firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch( {type: 'LOGIN_SUCCESS'});\n        }).catch((err) =>{\n            dispatch( {type: 'LOGIN_ERROR', err });\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch , getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0]+newUser.lastName[0]\n            }\n            )\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({ type:'SIGNUP_ERROR', err})\n        })\n\n\n    }\n} ","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to ='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to ='/signin'>Login</NavLink></li>  \n        </ul>\n    )\n\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth , profile } = props;\n    console.log(profile);\n    const links = auth.uid ? <SignedInLinks profile= {profile}/> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper teal\">\n            <div className=\"container\">\n                <Link to = '/' className=\"brand-logo\">C O L L A B</Link>\n                { links }\n            </div>\n        </nav>\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\n\nconst Notifications = (props) => {\n    const {notifications} = props\n    return(\n        <div className=\"section\">\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return(\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">\n                                        {item.user}\n                                    </span>\n                                    <span>\n                                        {item.content}\n                                    </span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })\n\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return(\n        <div className=\"card project-summary\">\n            <div className=\"card-content grey-text\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>{project.content}</p>\n                <p>{project.gitlink}</p>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">\n                    { moment(project.createdAt.toDate()).calendar() }\n                </p>\n            </div>          \n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport Link from 'react-router-dom/Link';\n\nconst ProjectList = ({projects}) => {\n\n    return(\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return(\n                    <Link to ={'/projects/' + project.id}  key={ project.id }  >\n                    <ProjectSummary project={project}/>\n                    </Link>\n                    \n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\n\n\nclass Dashboard extends Component {\n    render(){\n        const { projects , auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to= '/signin' />\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects = {projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications= {notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n\n\n    }\n\n\n\n}\n\nconst  mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n       { collection: 'projects' , orderBy: ['createdAt', 'desc']},\n       { collection: 'notifications', limit:3, orderBy:['time', 'desc']}\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if(!auth.uid) return <Redirect to ='/' />\n  if(project){\n      return(\n        <div className=\"container section project-details\">\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{ project.title }</span>\n                    <p>{ project.content }</p>\n                    <p>{ project.gitlink }</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\n                    <div><p className = 'grey-text'>{moment(project.createdAt.toDate()).calendar()}</p></div>\n                </div>\n            </div>\n        </div>\n      )\n  }\n  else{\n    return (\n        <div className=\"container center\">\n            Loading project .......\n        </div>\n        )\n  }\n  \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects =  state.firestore.data.projects;\n    const project = projects ? projects[id]: null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails)\n ","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n\n  state = {\n    email: '',\n    password: ''\n\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signIn(this.state);\n    \n    \n  }\n\n  handleChange = (e) => {\n    this.setState({\n        [e.target.id]: e.target.value\n    })\n  }\n  render() {\n    const { authError , auth } = this.props;\n    if(auth.uid) return <Redirect to = '/' />\n    return (\n      <div className = \"container\" style={{height:'992px'}}>\n        <div className=\"card\" style= {{marginTop:'20px'}}>\n            <div className=\"card-content\">\n            <form className=\"white\" onSubmit= {this.handleSubmit}>\n            <h5 className =\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>\n\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n            </div>\n\n            <div className=\"input-field\">\n                <button className=\"btn grey darken-2\">Login</button>\n            </div>\n            <div className=\"red-text center\" >\n              {authError ? <p>{authError}</p>: null}\n            </div>\n            </form>\n            </div>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst  mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n    }\n  }  \nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signUp(this.state);\n    \n  }\n\n  handleChange = (e) => {\n    this.setState({\n        [e.target.id]: e.target.value\n    })\n  }\n  render() {\n    const { auth } = this.props;\n    if(auth.uid) return <Redirect to= '/' />\n    return (\n      <div className = \"container\" style={{height:'992px'}}>\n          <div className=\"card\" style= {{marginTop:'20px'}}>\n              <div className=\"card-content\">\n                <form className=\"white\" onSubmit= {this.handleSubmit}>\n                <h5 className =\"grey-text text-darken-3\">Sign Up</h5>\n\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                </div>\n\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                </div>\n\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                </div>\n\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                </div>\n\n                <div className=\"input-field\">\n                    <button className=\"btn grey darken-2\">Login</button>\n                </div>\n                </form>\n              </div>\n          </div>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: '',\n    gitlink: ''\n  }\n\n  \n  handleSubmit = (e) => {\n    console.log(\"This is e\", e)\n    e.preventDefault();\n    this.props.createProject(this.state)\n    this.props.history.push('/')\n  }\n\n  handleChange = (e) => {\n    this.setState({\n        [e.target.id]: e.target.value\n    })\n  }\n\n  render() {\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to ='/signin' />\n    return (\n      <div className = \"container\" style={{height:'992px'}}>\n        <div className=\"card\" style= {{marginTop:'20px'}}>\n            <div className=\"card-content\">\n            <form className=\"white\" onSubmit= {this.handleSubmit}>\n            <h5 className =\"grey-text text-darken-3\">Create New Project</h5>\n\n            <div className=\"input-field\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n            </div>\n\n            <div className=\"input-field\">\n                <label htmlFor=\"content\">Project Content</label>\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            </div>\n\n            <div className=\"input-field\">\n                <label htmlFor=\"gitlink\">Github Link</label>\n                <input type=\"text\" id=\"gitlink\" onChange={this.handleChange}/>\n            </div>\n\n\n            <div className=\"input-field\">\n                <button className=\"btn grey darken-2\">Create Project</button>\n            </div>\n            </form>\n            </div>\n        </div>\n        \n      </div>\n    )\n  }\n}\nconst  mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    console.log(\"This is the project\",project)\n    return (dispatch, getState, { getFirestore, getFirebase }) => {\n        // Make async calls to database\n        const firestore = getFirestore();\n        const profile =  getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            console.log(\"This is the error\",err)\n            dispatch({ type: 'CREATE_PROJECT_ERROR', project });\n        })\n        \n    }\n};\n","import React from 'react'\nimport { SocialIcon } from 'react-social-icons'\n\nconst stylesHr = {\n    opacity:'0.3',\n    marginLeft:'30px',\n    marginRight:'30px'\n}\n\n\n\nconst Footer = () => {\n    return (\n        \n        \n                \n                <div className=\"row\">\n                <hr style={stylesHr}/>\n                    <div className=\"col\" style={{marginLeft:'47%', marginTop:'7px'}}>\n                        <SocialIcon style={{ height: 35, width: 35 }} url=\"https://github.com/SaurabhKulkarni21/collab\" />\n                        <SocialIcon style={{ height: 35, width: 35, marginLeft:'12px' }} url=\"https://linkedin.com\" />     \n                    </div>\n                </div>\n                \n        \n        \n        \n        \n    )\n}\n\nexport default Footer","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nimport Footer from './components/layout/Footer'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path ='/' component = {Dashboard}></Route>\n              <Route path ='/projects/:id' component = {ProjectDetails}></Route>\n              <Route path = \"/signin\" component = {SignIn}></Route>\n              <Route path=\"/signup\" component = {SignUp}></Route> \n              <Route path=\"/create\" component ={CreateProject}></Route>\n            </Switch>\n\n            <Footer />\n        </div>\n        \n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state= initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n        console.log(\"Login failed\")\n        return{\n            ...state,\n            authError: 'login failed'\n        }\n        case 'LOGIN_SUCCESS':\n        console.log(\"Login successful\")\n        return{\n            ...state,\n            authError: null\n        }\n        case 'SIGNOUT_SUCCESS':\n        console.log(\"Signout successful\")\n        return state;\n\n        case 'SIGNUP_SUCCESS':\n        console.log(\"signup success\")\n        return {\n            ...state,\n            authError: null\n        }\n\n        case 'SIGNUP_ERROR':\n        console.log('success failed')\n        return {\n            ...state,\n            authError: action.err.message\n        }\n\n        default:\n        return state;\n            \n    \n    }\n\n}\n\nexport default authReducer","const initState = {\n    projects: [{id:'1', title:'ML Project', content:'More ML Code', gitlink:'www.github.com/SaurabhKulkarni21'},\n                {id:'2', title:'DS Project', content:'More DS Code', gitlink:'www.github.com/VivekShetye27'}\n            ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) \n    {\n        case 'CREATE_PROJECT':\n            console.log(\"This is the created project\", action.project);\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log(\"Error while creating project\", action.err);\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport { combineReducers } from 'redux'\nimport projectReducer from './projectReducer'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth' \n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyC7vQ4OHwbF7WLqMTo5xqMSZSF10nns5H0\",\n    authDomain: \"collab-cf12c.firebaseapp.com\",\n    databaseURL: \"https://collab-cf12c.firebaseio.com\",\n    projectId: \"collab-cf12c\",\n    storageBucket: \"\",\n    messagingSenderId: \"933984282053\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots: true })\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore , applyMiddleware, compose } from 'redux';\nimport rootReducer  from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbaseconfig from './config/fbaseconfig'\n\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirestore, getFirebase})),\n        reduxFirestore(fbaseconfig),\n        reactReduxFirebase(fbaseconfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store ={store}><App /></Provider>, document.getElementById('root'));\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n\n\n\n\n"],"sourceRoot":""}